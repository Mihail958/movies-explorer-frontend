{"ast":null,"code":"export const BASE_URL = \"https://api.diploma.mikhail.nomoredomains.sbs\";\nconst HEADERS = {\n  \"Content-Type\": \"application/json\"\n};\n\nconst getJson = response => {\n  if (response.ok) {\n    return response.json();\n  }\n\n  throw new Error({\n    status: response.status\n  });\n};\n\nexport const register = (nameRegister, emailRegister, passwordRegister) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: HEADERS,\n    body: JSON.stringify({\n      name: nameRegister,\n      email: emailRegister,\n      password: passwordRegister\n    })\n  }).then(getJson);\n};\nexport const authorization = (emailLogin, passwordLogin) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: HEADERS,\n    body: JSON.stringify({\n      email: emailLogin,\n      password: passwordLogin\n    })\n  }).then(getJson);\n};\nexport const examinationValidationToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: { ...HEADERS,\n      Authorization: `Bearer ${token}`\n    }\n  }).then(getJson);\n};","map":{"version":3,"names":["BASE_URL","HEADERS","getJson","response","ok","json","Error","status","register","nameRegister","emailRegister","passwordRegister","fetch","method","headers","body","JSON","stringify","name","email","password","then","authorization","emailLogin","passwordLogin","examinationValidationToken","token","Authorization"],"sources":["C:/Users/Михаил/dev/movies-explorer-frontend/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = \"https://api.diploma.mikhail.nomoredomains.sbs\";\r\n\r\nconst HEADERS = {\r\n  \"Content-Type\": \"application/json\",\r\n};\r\n\r\nconst getJson = (response) => {\r\n  if (response.ok) {\r\n    return response.json();\r\n  }\r\n  throw new Error({ status: response.status });\r\n};\r\n\r\nexport const register = (nameRegister, emailRegister, passwordRegister) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: \"POST\",\r\n    headers: HEADERS,\r\n    body: JSON.stringify({\r\n      name: nameRegister,\r\n      email: emailRegister,\r\n      password: passwordRegister,\r\n    }),\r\n  }).then(getJson);\r\n};\r\n\r\nexport const authorization = (emailLogin, passwordLogin) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: \"POST\",\r\n    headers: HEADERS,\r\n    body: JSON.stringify({ email: emailLogin, password: passwordLogin }),\r\n  }).then(getJson);\r\n};\r\n\r\nexport const examinationValidationToken = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      ...HEADERS,\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  }).then(getJson);\r\n};"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+CAAjB;AAEP,MAAMC,OAAO,GAAG;EACd,gBAAgB;AADF,CAAhB;;AAIA,MAAMC,OAAO,GAAIC,QAAD,IAAc;EAC5B,IAAIA,QAAQ,CAACC,EAAb,EAAiB;IACf,OAAOD,QAAQ,CAACE,IAAT,EAAP;EACD;;EACD,MAAM,IAAIC,KAAJ,CAAU;IAAEC,MAAM,EAAEJ,QAAQ,CAACI;EAAnB,CAAV,CAAN;AACD,CALD;;AAOA,OAAO,MAAMC,QAAQ,GAAG,CAACC,YAAD,EAAeC,aAAf,EAA8BC,gBAA9B,KAAmD;EACzE,OAAOC,KAAK,CAAE,GAAEZ,QAAS,SAAb,EAAuB;IACjCa,MAAM,EAAE,MADyB;IAEjCC,OAAO,EAAEb,OAFwB;IAGjCc,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBC,IAAI,EAAET,YADa;MAEnBU,KAAK,EAAET,aAFY;MAGnBU,QAAQ,EAAET;IAHS,CAAf;EAH2B,CAAvB,CAAL,CAQJU,IARI,CAQCnB,OARD,CAAP;AASD,CAVM;AAYP,OAAO,MAAMoB,aAAa,GAAG,CAACC,UAAD,EAAaC,aAAb,KAA+B;EAC1D,OAAOZ,KAAK,CAAE,GAAEZ,QAAS,SAAb,EAAuB;IACjCa,MAAM,EAAE,MADyB;IAEjCC,OAAO,EAAEb,OAFwB;IAGjCc,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEE,KAAK,EAAEI,UAAT;MAAqBH,QAAQ,EAAEI;IAA/B,CAAf;EAH2B,CAAvB,CAAL,CAIJH,IAJI,CAICnB,OAJD,CAAP;AAKD,CANM;AAQP,OAAO,MAAMuB,0BAA0B,GAAIC,KAAD,IAAW;EACnD,OAAOd,KAAK,CAAE,GAAEZ,QAAS,WAAb,EAAyB;IACnCa,MAAM,EAAE,KAD2B;IAEnCC,OAAO,EAAE,EACP,GAAGb,OADI;MAEP0B,aAAa,EAAG,UAASD,KAAM;IAFxB;EAF0B,CAAzB,CAAL,CAMJL,IANI,CAMCnB,OAND,CAAP;AAOD,CARM"},"metadata":{},"sourceType":"module"}