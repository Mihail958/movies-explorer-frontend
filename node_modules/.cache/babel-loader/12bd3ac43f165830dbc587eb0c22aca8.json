{"ast":null,"code":"export const URL = \"http://api.diploma.mikhail.nomoredomains.sbs/\";\n\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n\n  return Promise.reject(res.status);\n}\n\nexport function registerUser(email, password) {\n  return fetch(`${URL}/signup`, {\n    credentials: 'include',\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkResponse);\n}\nexport function loginUser(email, password) {\n  return fetch(`${URL}/signin`, {\n    credentials: 'include',\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkResponse);\n}\nexport function getToken(jwt) {\n  return fetch(`${URL}/users/me`, {\n    credentials: 'include',\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${jwt}`\n    }\n  }).then(checkResponse);\n}","map":{"version":3,"names":["URL","checkResponse","res","ok","json","Promise","reject","status","registerUser","email","password","fetch","credentials","method","headers","body","JSON","stringify","then","loginUser","getToken","jwt"],"sources":["C:/Users/Михаил/dev/movies-explorer-frontend/src/utils/auth.js"],"sourcesContent":["export const URL = \"http://api.diploma.mikhail.nomoredomains.sbs/\";\r\n\r\nfunction checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(res.status);\r\n  }\r\n  \r\n  \r\n  export function registerUser(email, password) {\r\n    return fetch(`${URL}/signup`, {\r\n      credentials: 'include',\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    }).then(checkResponse);\r\n  }\r\n  \r\n  export function loginUser(email, password) {\r\n    return fetch(`${URL}/signin`, {\r\n      credentials: 'include',\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    }).then(checkResponse);\r\n  }\r\n  \r\n  export function getToken(jwt) {\r\n    return fetch(`${URL}/users/me`, {\r\n      credentials: 'include',\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": `Bearer ${jwt}`\r\n      },\r\n    }).then(checkResponse);\r\n  }"],"mappings":"AAAA,OAAO,MAAMA,GAAG,GAAG,+CAAZ;;AAEP,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;EACxB,IAAIA,GAAG,CAACC,EAAR,EAAY;IACV,OAAOD,GAAG,CAACE,IAAJ,EAAP;EACD;;EACD,OAAOC,OAAO,CAACC,MAAR,CAAeJ,GAAG,CAACK,MAAnB,CAAP;AACD;;AAGD,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,QAA7B,EAAuC;EAC5C,OAAOC,KAAK,CAAE,GAAEX,GAAI,SAAR,EAAkB;IAC5BY,WAAW,EAAE,SADe;IAE5BC,MAAM,EAAE,MAFoB;IAG5BC,OAAO,EAAE;MACP,gBAAgB;IADT,CAHmB;IAM5BC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAER,KAAF;MAASC;IAAT,CAAf;EANsB,CAAlB,CAAL,CAOJQ,IAPI,CAOCjB,aAPD,CAAP;AAQD;AAED,OAAO,SAASkB,SAAT,CAAmBV,KAAnB,EAA0BC,QAA1B,EAAoC;EACzC,OAAOC,KAAK,CAAE,GAAEX,GAAI,SAAR,EAAkB;IAC5BY,WAAW,EAAE,SADe;IAE5BC,MAAM,EAAE,MAFoB;IAG5BC,OAAO,EAAE;MACP,gBAAgB;IADT,CAHmB;IAM5BC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAER,KAAF;MAASC;IAAT,CAAf;EANsB,CAAlB,CAAL,CAOJQ,IAPI,CAOCjB,aAPD,CAAP;AAQD;AAED,OAAO,SAASmB,QAAT,CAAkBC,GAAlB,EAAuB;EAC5B,OAAOV,KAAK,CAAE,GAAEX,GAAI,WAAR,EAAoB;IAC9BY,WAAW,EAAE,SADiB;IAE9BC,MAAM,EAAE,KAFsB;IAG9BC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEP,iBAAkB,UAASO,GAAI;IAFxB;EAHqB,CAApB,CAAL,CAOJH,IAPI,CAOCjB,aAPD,CAAP;AAQD"},"metadata":{},"sourceType":"module"}